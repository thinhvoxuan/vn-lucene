<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="nutch-conf.xsl"?>

<!-- Do not modify this file directly.  Instead, copy entries that you -->
<!-- wish to modify from this file into nutch-site.xml and change them -->
<!-- there.  If nutch-site.xml does not already exist, create it.      -->

<nutch-conf>

<!-- HTTP properties -->

<property>
  <name>http.agent.name</name>
  <value>NutchCVS</value>
  <description>Our HTTP 'User-Agent' request header.</description>
</property>

<property>
  <name>http.robots.agents</name>
  <value>NutchCVS,Nutch,*</value>
  <description>The agent strings we'll look for in robots.txt files,
  comma-separated, in decreasing order of precedence.</description>
</property>

<property>
  <name>http.agent.description</name>
  <value>Nutch</value>
  <description>Further description of our bot- this text is used in
  the User-Agent header.  It appears in parenthesis after the agent name.
  </description>
</property>

<property>
  <name>http.agent.url</name>
  <value>http://www.nutch.org/docs/en/bot.html</value>
  <description>A URL to advertise in the User-Agent header.  This will 
   appear in parenthesis after the agent name.
  </description>
</property>

<property>
  <name>http.agent.email</name>
  <value>nutch-agent@lists.sourceforge.net</value>
  <description>An email address to advertise in the HTTP 'From' request
   header and User-Agent header.</description>
</property>

<property>
  <name>http.agent.version</name>
  <value>0.05-dev</value>
  <description>A version string to advertise in the User-Agent 
   header.</description>
</property>

<property>
  <name>http.timeout</name>
  <value>10000</value>
  <description>The default network timeout, in milliseconds.</description>
</property>

<property>
  <name>http.content.limit</name>
  <value>65536</value>
  <description>The default length limit for downloaded content, in
   bytes.  Content longer than this is truncated.</description>
</property>

<property>
  <name>http.proxy.host</name>
  <value></value>
  <description>The proxy hostname.  If empty, no proxy is used.</description>
</property>

<property>
  <name>http.proxy.port</name>
  <value></value>
  <description>The proxy port.</description>
</property>

<property>
  <name>http.verbose</name>
  <value>false</value>
  <description>If true, HTTP will log more verbosely.</description>
</property>


<!-- FTP properties -->

<property>
  <name>ftp.username</name>
  <value>anonymous</value>
  <description>ftp login username.</description>
</property>

<property>
  <name>ftp.password</name>
  <value>anonymous@example.com</value>
  <description>ftp login password.</description>
</property>

<property>
  <name>ftp.content.limit</name>
  <value>65536</value> 
  <description>The length limit for downloaded content, in bytes.
  If this value is larger than zero, content longer than it is truncated;
  otherwise (zero or negative), no truncation at all. Caution: classical
  ftp RFCs never defines partial transfer and, in fact, some ftp servers
  out there do not handle client side forced close-down very well.
  Our implementation tries its best to handle such situations smoothly.
  </description>
</property>

<property>
  <name>ftp.timeout</name>
  <value>60000</value>
  <description>Default timeout for ftp client socket, in millisec.
  Please also see ftp.keep.connection below.</description>
</property>

<property>
  <name>ftp.server.timeout</name>
  <value>100000</value>
  <description>An estimation of ftp server idle time, in millisec.
  Typically it is 120000 millisec for many ftp servers out there.
  Better be conservative here. Together with ftp.timeout, it is used to
  decide if we need to delete (annihilate) current ftp.client instance and
  force to start another ftp.client instance anew. This is necessary because
  a fetcher thread may not be able to obtain next request from queue in time
  (due to idleness) before our ftp client times out or remote server
  disconnects. Used only when ftp.keep.connection is true (please see below).
  </description>
</property>

<property>
  <name>ftp.keep.connection</name>
  <value>false</value>
  <description>Whether to keep ftp connection. Useful if crawling same host
  again and again. When set to true, it avoids connection, login and dir list
  parser setup for subsequent urls. If it is set to true, however, you must
  make sure (roughly):
  (1) ftp.timeout is less than ftp.server.timeout
  (2) ftp.timeout is larger than (fetcher.threads.fetch * fetcher.server.delay)
  Otherwise there will be too many "delete client because idled too long"
  messages in thread logs.</description>
</property>

<property>
  <name>ftp.follow.talk</name>
  <value>false</value>
  <description>Whether to log dialogue between our client and remote
  server. Useful for debugging.</description>
</property>

<!-- web db properties -->

<property>
  <name>db.default.fetch.interval</name>
  <value>30</value>
  <description>The default number of days between re-fetches of a page.
  </description>
</property>

<property>
  <name>db.ignore.internal.links</name>
  <value>true</value>
  <description>If true, when adding new links to a page, links from
  the same host are ignored.  This is an effective way to limit the
  size of the link database, keeping the only the highest quality
  links.
  </description>
</property>

<property>
  <name>db.score.injected</name>
  <value>1.0</value>
  <description>The score of new pages added by the injector.
  </description>
</property>

<property>
  <name>db.score.link.external</name>
  <value>1.0</value>
  <description>The score factor for new pages added due to a link from
  another host relative to the referencing page's score.
  </description>
</property>

<property>
  <name>db.score.link.internal</name>
  <value>1.0</value>
  <description>The score factor for pages added due to a link from the
  same host, relative to the referencing page's score.
  </description>
</property>

<property>
  <name>db.max.outlinks.per.page</name>
  <value>100</value>
  <description>The maximum number of outlinks that we'll process for a page.
  </description>
</property>

<property>
  <name>db.max.anchor.length</name>
  <value>100</value>
  <description>The maximum number of characters permitted in an anchor.
  </description>
</property>

<!-- fetcher properties -->

<property>
  <name>fetcher.server.delay</name>
  <value>5</value>
  <description>The number of seconds the fetcher will delay between 
   successive requests to the same server.</description>
</property>

<property>
  <name>fetcher.threads.fetch</name>
  <value>10</value>
  <description>The number of FetcherThreads the fetcher should use.
    This is also determines the maximum number of requests that are 
    made at once (each FetcherThread handles one connection).</description>
</property>

<property>
  <name>fetcher.threads.output</name> 
  <value>5</value>
  <description>The number of OutputThreads to use.  When adjusting
    this, remember that each thread could be holding a raw page, it's
    DOM structure, plaintext, and extracted links in memory.
  </description> 
</property>

<property>
  <name>fetcher.stats.minutes</name>
  <value>2</value>
  <description>Controls how often the fetcher will dump progress statistics
    to the logs, in minutes.</description>
</property>

<property>
  <name>fetcher.request.queue</name>
  <value>25000</value>
  <description>The maximum number of unfetched requests to queue in
    memory.</description>
</property>

<property>
  <name>fetcher.output.queue</name>
  <value>250</value>
  <description>The maximum number of completed (but unwritten) requests to
    queue in memory before throttling the fetcher.</description>
</property>

<property>
  <name>fetcher.active.servers</name>
  <value>10000</value>
  <description>The maximum number of distinct servers that may be referenced
    by queued requests.</description>
</property>

<property>
  <name>fetcher.robots.cache</name>
  <value>20000</value>
  <description>The minimum number of robots.txt files to cache for 
    inactive servers.</description>
</property>

<property>
  <name>fetcher.server.maxurls</name>
  <value>5000</value>
  <description>The maximum number of URLs that may be queued at once for a 
    single host.</description>
</property>

<property>
  <name>fetcher.lowservers.threshold</name>
  <value>1000</value>
  <description>When there are fewer than this many servers in the fetcher's
    active queues, each server's queue of URLs will be pruned to 
    fetcher.lowservers.maxurls.
    </description>
</property>

<property>
  <name>fetcher.lowservers.maxurls</name>
  <value>50</value>
  <description>See description of fetcher.lowservers.threshold.
    </description>
</property>

<property>
  <name>fetcher.retry.max</name>
  <value>3</value>
  <description>The maximum number of times the fetcher will attempt to get 
    a page that has encountered recoverable errors. </description>
</property>

<property>
  <name>fetcher.redirect.max</name>
  <value>3</value>
  <description>The maximum number of redirects the fetcher will follow when
    trying to fetch a page.</description>
</property>

<property>
  <name>fetcher.host.consecutive.failures</name>
  <value>3</value>
  <description>
    The maximum number of consecutive failures, excluding 404 errors, to
    allow on a given server before declaring it dead (note: each failure
    will have had up to fetcher.retry.max retries). </description>
</property>

<property>
  <name>fetcher.host.max.failerr.rate</name>
  <value>.5</value>
  <description>The maximum fetch error rate, excluding 404s, to allow for 
    a given server before declaring it dead.  Note: errors include
    transient issues, and multiple retries contribute to the score (so, 
    getting the first page on the 3rd try gives you a .66 "failerr.rate"). 
  </description>
</property>

<property>
  <name>fetcher.host.min.requests.rate</name>
  <value>10</value>
  <description>A threshold on the minimum number of requests we issue 
    to a host before applying fetcher.host.max.failerr.rate.  At least
    this many requests will be issued before declaring a host dead due
    to error rate.  Note: this setting does not affect 
    fetcher.host.consecutive.failures!
    </description>
</property>

<property>
  <name>excludehosts.suffix.file</name>
  <value>banned-hosts.txt</value>
  <description>Filename which contains list of hostnames we shouldn't 
    fetch from.</description>
</property>

<property>
  <name>fetcher.trace.longmsg</name>
  <value>false</value>
  <description>Whether to use "long messages" is the trace portion
  of the logged output (if set to false, terse messages will be used).  
  </description>
</property>

<property>
  <name>fetcher.trace.success</name>
  <value>false</value>
  <description>Whether to log successful fetches in the trace log.
  </description>
</property>

<property>
  <name>fetcher.trace.not.found</name>
  <value>false</value>
  <description>Whether to log 404/Not Found errors in the trace log.
  </description>
</property>

<property>
  <name>fetcher.throttle.period</name>
  <value>30</value>
  <description>How often throttling behavior should be readjusted based
  on current bandwidth usage, measured in seconds.  Set to -1 to disable
  throttling.
  </description>
</property>

<property>
  <name>fetcher.throttle.bandwidth</name>
  <value>-1</value>
  <description>The desired amount of bandwidth the fetcher should use 
  (aside from DNS and TCP overhead), in kbits/s.   Set to -1 to disable 
  throttling.  Note: This is *not* a cap, this is a target for 
  bandwidth usage over time.
  </description>
</property>

<property>
  <name>fetcher.throttle.initial.threads</name>
  <value>10</value>
  <description>The number of threads that should be active initially.
  </description>
</property>

<property>
  <name>fetcher.verbose</name>
  <value>false</value>
  <description>If true, fetcher will log more verbosely.</description>
</property>

<!-- i/o properties -->

<property>
  <name>io.sort.factor</name>
  <value>100</value>
  <description>The number of streams to merge at once while sorting
  files.  This determines the number of open file handles.</description>
</property>

<property>
  <name>io.sort.mb</name>
  <value>100</value>
  <description>The total amount of buffer memory to use while sorting 
  files, in megabytes.  By default, gives each merge stream 1MB, which
  should minimize seeks.</description>
</property>

<!-- indexer properties -->

<property>
  <name>indexer.score.power</name>
  <value>0.5</value>
  <description>Determines the power of link analyis scores.  Each
  pages's boost is set to <i>score<sup>scorePower</sup></i> where
  <i>score</i> is its link analysis score and <i>scorePower</i> is the
  value of this parameter.  This is compiled into indexes, so, when
  this is changed, pages must be re-indexed for it to take
  effect.</description>
</property>

<property>
  <name>indexer.boost.by.link.count</name>
  <value>false</value>
  <description>When true scores for a page are multipled by the log of
  the number of incoming links to the page.</description>
</property>

<property>
  <name>indexer.max.title.length</name>
  <value>100</value>
  <description>The maximum number of characters of a title that are indexed.
  </description>
</property>

<!-- analysis properties -->

<property>
  <name>analysis.common.terms.file</name>
  <value>common-terms.utf8</value>
  <description>The name of a file containing a list of common terms
  that should be indexed in n-grams.</description>
</property>

<!-- searcher properties -->

<property>
  <name>searcher.dir</name>
  <value>.</value>
  <description>
  Path to root of index directories.  This directory is searched (in
  order) for either the file search-servers.txt, containing a list of
  distributed search servers, or the directory "index" containing
  merged indexes, or the directory "segments" containing segment
  indexes.
  </description>
</property>

<!-- urlfilter properties -->

<property>
  <name>urlfilter.class</name>
  <value>net.nutch.net.RegexURLFilter</value>
  <description>Name of the class used to filter URLs.</description>
</property>

<property>
  <name>urlfilter.regex.file</name>
  <value>regex-urlfilter.txt</value>
  <description>Name of file on CLASSPATH containing default regular
  expressions used by RegexURLFilter.</description>
</property>

<!-- mime properties -->

<property>
  <name>mime.types.file</name>
  <value>mime.types</value>
  <description>Name of file in CLASSPATH containing filename extension to
  mime types mapping information</description>
</property>

<property>
  <name>mime.magic.file</name>
  <value>mime-magic.txt</value>
  <description>Name of file in CLASSPATH containing file magic to
  mime types mapping information</description>
</property>

<!-- plugin properties -->

<property>
  <name>plugin.folders</name>
  <value>build/plugins,plugins</value>
  <description>A Directory where nutch plugin are located</description>
</property>

</nutch-conf>
